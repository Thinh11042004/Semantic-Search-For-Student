const axios = require('axios'); // Th∆∞ vi·ªán g·ª≠i HTTP request

// L·∫•y URL API t√¨m ki·∫øm t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
const SEARCH_API = process.env.SEARCH_API; 

// ------------------------------
// API t√¨m ki·∫øm bi·ªÉu m·∫´u theo semantic search
// ------------------------------
const searchForms = async (req, res) => {
    try {
        const { query } = req.query;

        // Ki·ªÉm tra h·ª£p l·ªá ƒë·∫ßu v√†o
        if (!query || typeof query !== 'string' || query.trim() === '') {
            return res.status(400).json({ error: 'Thi·∫øu ho·∫∑c sai ƒë·ªãnh d·∫°ng query' });
        }

        // G·ª≠i request ƒë·∫øn API /search t·ª´ app.py
        console.log('üîé G·ª≠i truy v·∫•n ƒë·∫øn backend /search:', query);

        // G·ªçi API t√¨m ki·∫øm c·ªßa app.py
        const aiResponse = await axios.get(`${SEARCH_API}?query=${encodeURIComponent(query.trim())}`);

        const data = aiResponse.data;

        // Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ API
        if (!data || !Array.isArray(data.results)) {
            return res.status(500).json({ error: 'K·∫øt qu·∫£ tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá t·ª´ API t√¨m ki·∫øm' });
        }

        // Tr·∫£ k·∫øt qu·∫£ t√¨m ki·∫øm v·ªÅ frontend
        return res.status(200).json({
            query,
            totalMatches: data.results.length,
            results: data.results.map(item => ({
                title: item.title,
                file_path: item.file_path,
                created_at: item.created_at || new Date(),
            }))
        });

    } catch (err) {
        console.error('‚ùå L·ªói trong searchForms:', err.message);
        return res.status(500).json({
            error: 'Search failed',
            details: err.message
        });
    }
};

module.exports = { searchForms };
