const axios = require('axios'); // Th∆∞ vi·ªán g·ª≠i HTTP request

const EMBEDDING_API = process.env.SEARCH_API; 
// ------------------------------
// API t√¨m ki·∫øm bi·ªÉu m·∫´u theo semantic search
// ------------------------------
const searchForms = async (req, res) => {
    try {
        const { query } = req.query;

        // -------------------------
        // Ki·ªÉm tra h·ª£p l·ªá ƒë·∫ßu v√†o.
        // -------------------------
        if (!query || typeof query !== 'string' || query.trim() === '') {
            return res.status(400).json({ error: 'Thi·∫øu ho·∫∑c sai ƒë·ªãnh d·∫°ng query' });
        }

        // -------------------------
        // G·ª≠i request sang AI service /search
        // -------------------------
        console.log('üîé G·ª≠i truy v·∫•n ƒë·∫øn AI /search:', query);
        const aiResponse = await axios.post(`${EMBEDDING_API}/search`, {
            query: query.trim(),
            top_k: 10
        });

        const data = aiResponse.data;

        // -------------------------
        // Ki·ªÉm tra k·∫øt qu·∫£ tr·∫£ v·ªÅ h·ª£p l·ªá kh√¥ng
        // -------------------------
        if (!data || !Array.isArray(data.results)) {
            return res.status(500).json({ error: 'K·∫øt qu·∫£ tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá t·ª´ AI service' });
        }

        // -------------------------
        // Tr·∫£ k·∫øt qu·∫£ v·ªÅ frontend
        // -------------------------
        return res.status(200).json({
            query,
            totalMatches: data.results.length,
            results: data.results.map(item => ({
                title: item.title,
                file_path: item.file_path,
                created_at: item.created_at || new Date(),
                similarity: parseFloat(item.similarity).toFixed(4)
            }))
        });

    } catch (err) {
        console.error('‚ùå L·ªói trong searchForms:', err.message);
        return res.status(500).json({
            error: 'Search failed',
            details: err.message
        });
    }
};

module.exports = { searchForms };
